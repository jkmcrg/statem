(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{206:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[a("strong",[t._v("statem")]),t._v(" is a JavaScript state/turing machine framework which lets you manage your application's "),a("em",[t._v("total state")]),t._v(" (i.e. named states, transitions, data, and rewriting of inputs).")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("StateM is largely based on Erlang OTP’s "),a("a",{attrs:{href:"http://erlang.org/doc/design_principles/statem.html",title:"gen_statem",target:"_blank",rel:"noopener noreferrer"}},[t._v("gen_statem"),a("OutboundLink")],1),t._v(" behavior.")])]),t._v(" "),a("h4",{attrs:{id:"event-driven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-driven"}},[t._v("#")]),t._v(" Event Driven")]),t._v(" "),a("p",[a("em",[t._v("StateM")]),t._v(" is an event-driven state machine where the input is an event that triggers a state transition and the output is actions executed during the state transition. Events drive the state machine and are externally triggered or internally generated by the state machine. Pending events are tracked on a priority queue that preserves entry order.")]),t._v(" "),a("h4",{attrs:{id:"handlers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handlers"}},[t._v("#")]),t._v(" Handlers")]),t._v(" "),a("p",[t._v("State machines are specified as an ordered list of handlers keyed on "),a("code",[t._v("Event x State")]),t._v(" tuples (wildcards and patterns are allowed to combine handlers).")]),t._v(" "),a("h4",{attrs:{id:"handling-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-events"}},[t._v("#")]),t._v(" Handling Events")]),t._v(" "),a("p",[t._v("If the state machine is in state "),a("code",[t._v("S")]),t._v(" and event "),a("code",[t._v("E")]),t._v(" occurs, the state machine will perform actions "),a("code",[t._v("A")]),t._v(" and make a transition to state "),a("code",[t._v("S'")]),t._v("("),a("code",[t._v("S'")]),t._v(" can be equal to "),a("code",[t._v("S")]),t._v(" and "),a("code",[t._v("A")]),t._v(" can be empty).")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("State")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Actions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("State")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v("'"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("To do this, statem will match the tuple "),a("code",[t._v("ExS")]),t._v(" against the keys of the ordered list of handlers for the first matching handler, execute its actions "),a("code",[t._v("A")]),t._v(" and transition to the")]),t._v(" "),a("h4",{attrs:{id:"arbitrary-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arbitrary-data"}},[t._v("#")]),t._v(" Arbitrary Data")]),t._v(" "),a("p",[t._v("State machines can hold arbitrary data which is provided to, and can be mutated by, it's event handlers.")]),t._v(" "),a("h4",{attrs:{id:"total-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#total-state"}},[t._v("#")]),t._v(" Total State")]),t._v(" "),a("p",[a("em",[t._v("Statem")]),t._v(" provides management of "),a("em",[t._v("total state")]),t._v(", i.e.:")]),t._v(" "),a("ul",[a("li",[t._v("Management of states and transitions as in a DFA,")]),t._v(" "),a("li",[t._v("Custom read/write memory available to handlers,")]),t._v(" "),a("li",[t._v("Ability to rewrite inputs by postponing them.")])]),t._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Co-located code")]),t._v(": Event, states, transitions and actions in one place.")]),t._v(" "),a("li",[a("strong",[t._v("Inserted Events")]),t._v(": Insert events from within the specification.")]),t._v(" "),a("li",[a("strong",[t._v("State Entry Events")]),t._v(": Automatically generates Entry events on state change.")]),t._v(" "),a("li",[a("strong",[t._v("Timeouts")]),t._v(": Install timeouts for state transitions, new events, or just plain timeouts.")])]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Install with "),a("code",[t._v("npm")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save gen-statem\n")])])]),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("p",[t._v("Create a state machine by calling "),a("code",[t._v("StateMachine's")]),t._v(" constructor and passing it a list of handlers, the initial state and optional data.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("The state machine’s data type "),a("code",[t._v("TData")]),t._v(" is a type argument ("),a("code",[t._v("StateMachine<TData>")]),t._v(").")])]),t._v(" "),a("p",[t._v("For example, the state machine below toggles states "),a("code",[t._v("ONE")]),t._v(" and "),a("code",[t._v("TWO")]),t._v(" on event "),a("code",[t._v("next")]),t._v(". "),a("img",{attrs:{src:"https://documents.lucidchart.com/documents/eef39cb2-9656-4c52-88d8-eb6c9f6a5cec/pages/YGcM5DNywbTK?a=1152&x=85&y=151&w=360&h=181&store=1&accept=image/*&auth=LCA%20a77efaa9c861072b1008c96fd065a7b008f5aa33-ts=1538363749",alt:""}})]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateMachine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    handlers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cast#next#ONE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TWO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cast#next#TWO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ONE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    initialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ONE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startSM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stateChanged'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("old"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" --\x3e ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" on ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ONE --\x3e TWO on Cast@Low { context: 'next' }")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TWO --\x3e ONE on Cast@Low { context: 'next' }")]),t._v("\n")])])]),a("h3",{attrs:{id:"subclassing-statemachine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subclassing-statemachine"}},[t._v("#")]),t._v(" Subclassing StateMachine")]),t._v(" "),a("p",[t._v("Extending the "),a("code",[t._v("StateMachine")]),t._v(" class lets you declare and implement a public API for your state machine (and wrap call/cast dispatch calls).")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Handler functions are called with "),a("code",[t._v("this")]),t._v(" set to the state machine instance.")])]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PingPong")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateMachine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    handlers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Handlers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cast#next#ONE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TWO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cast#next#TWO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ONE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    initialState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ONE"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define our public API")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PingPong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("startSM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stateChanged'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("old"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" --\x3e ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" on ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ONE --\x3e TWO on Cast@Low { context: 'next' }")]),t._v("\nsm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TWO --\x3e ONE on Cast@Low { context: 'next' }")]),t._v("\n")])])]),a("h3",{attrs:{id:"in-the-browser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-the-browser"}},[t._v("#")]),t._v(" In the Browser")]),t._v(" "),a("p",[t._v("Fetch it from npm via unpkg:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://unpkg.com/gen-statem/dist/umd/gen-statem.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"react-state-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-state-management"}},[t._v("#")]),t._v(" React State Management")]),t._v(" "),a("p",[t._v("StateM accepts a "),a("code",[t._v("DataProxy")]),t._v(" object to synchronize its internal data with external objects such as React components.")]),t._v(" "),a("blockquote",[a("p",[t._v("Terminology: State machine data == React component state")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateMachine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dataProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"how-it-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[t._v("#")]),t._v(" How It Works")]),t._v(" "),a("h3",{attrs:{id:"routes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routes"}},[t._v("#")]),t._v(" Routes")]),t._v(" "),a("p",[t._v("StateM uses the url path to parameterized route matching seen in "),a("a",{attrs:{href:"www.expressjs.com"}},[t._v("express")]),t._v(" et. al.")]),t._v(" "),a("h4",{attrs:{id:"current-event-routes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#current-event-routes"}},[t._v("#")]),t._v(" Current Event Routes")]),t._v(" "),a("p",[t._v("The current event and current state are mapped to a route string as:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<current event>#<event context>#<current state>\n")])])]),a("p",[t._v("For example:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Event")]),t._v(" "),a("th",[t._v("Event Context")]),t._v(" "),a("th",[t._v("Current State")]),t._v(" "),a("th",[t._v("Route")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("cast")]),t._v(" "),a("td",[a("code",[t._v('"flip"')])]),t._v(" "),a("td",[t._v("off")]),t._v(" "),a("td",[a("code",[t._v('"cast#flip#off"')])])]),t._v(" "),a("tr",[a("td",[t._v("cast")]),t._v(" "),a("td",[a("code",[t._v("{button: 2}")])]),t._v(" "),a("td",[t._v("locked")]),t._v(" "),a("td",[a("code",[t._v('"cast#button/2#off"')])])]),t._v(" "),a("tr",[a("td",[t._v("call")]),t._v(" "),a("td",[a("code",[t._v('"getInfo"')])]),t._v(" "),a("td",[t._v("one")]),t._v(" "),a("td",[a("code",[t._v('"call/internalId#getInfo/2#one"')])])])])]),t._v(" "),a("h4",{attrs:{id:"event-handler-routes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-handler-routes"}},[t._v("#")]),t._v(" Event Handler Routes")]),t._v(" "),a("p",[t._v("In addition to string literals, handler routes can include:")]),t._v(" "),a("ul",[a("li",[t._v("Parameter capture patterns ("),a("code",[t._v(":param")]),t._v(") capture up to the next "),a("code",[t._v("/")]),t._v(", "),a("code",[t._v("#")]),t._v(" or the end of the route.")]),t._v(" "),a("li",[t._v("Splats ("),a("code",[t._v("*param")]),t._v(") capture from up to "),a("code",[t._v("#")]),t._v(" or the end of the route.")]),t._v(" "),a("li",[t._v("Parts of the route can be marked optional by wrapping in parenthesis. Optional parts can include parameter capture and splats.")])]),t._v(" "),a("h5",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cast#flip#:state")]),t._v(" will match a "),a("code",[t._v("cast(flip)")]),t._v(" event in any state and provide the current state as an argument ("),a("code",[t._v("args.param")]),t._v(") to the handler.")]),t._v(" "),a("li",[a("code",[t._v("call/:from#getInfo#:state")]),t._v(" will capture the callerId and state as "),a("code",[t._v("args.from")]),t._v(" and "),a("code",[t._v("args.state")]),t._v(" respectively.")]),t._v(" "),a("li",[a("code",[t._v('"cast#button/:digit#locked')]),t._v(" will capture a button press in the "),a("code",[t._v("locked")]),t._v(" state and provide the digit value in "),a("code",[t._v("args.digit")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v('"cast#*context#open')]),t._v(" intercepts any "),a("code",[t._v("cast")]),t._v(" events in state "),a("code",[t._v("open")]),t._v(" regardless of the parameters passed when cast was invoked (note: the splat will be available as "),a("code",[t._v("args.context")]),t._v(").")])]),t._v(" "),a("h3",{attrs:{id:"event-handlers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-handlers"}},[t._v("#")]),t._v(" Event Handlers")]),t._v(" "),a("p",[t._v("A key part of a state machine specification is the list of (route, handler) tuples:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(string | Array<string>, function | string | [string, string | number])\n")])])]),a("blockquote",[a("p",[t._v("Note: Event handlers are specified as an array to preserve order (vs. objects, where property"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in#Deleted_added_or_modified_properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("iteration order"),a("OutboundLink")],1),t._v(" is arbitrary).")])]),t._v(" "),a("h4",{attrs:{id:"multiple-routes-to-a-handler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-routes-to-a-handler"}},[t._v("#")]),t._v(" Multiple Routes to a Handler")]),t._v(" "),a("p",[t._v("When a route is specified as an array, it is treated as a boolean OR, i.e. if any route matches an incoming event route, the corresponding handler is invoked.")]),t._v(" "),a("h4",{attrs:{id:"handler-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handler-functions"}},[t._v("#")]),t._v(" Handler Functions")]),t._v(" "),a("p",[t._v("Handler functions receive the following:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" HandlerOpts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" State"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("current")]),t._v(": the state machine’s current state.")]),t._v(" "),a("li",[a("code",[t._v("data")]),t._v(": the state machine’s current data.")]),t._v(" "),a("li",[a("code",[t._v("args")]),t._v(": any arguments or splats parsed from the incoming event’s route.")]),t._v(" "),a("li",[a("code",[t._v("event")]),t._v(": the actual incoming event.")]),t._v(" "),a("li",[a("code",[t._v("route")]),t._v(": the event’s route.")])]),t._v(" "),a("p",[t._v("Handler functions can return:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ResultBuilder")]),t._v(" a fluent builder for "),a("code",[t._v("Results")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("Result")]),t._v(" - verbose, not recommended.")]),t._v(" "),a("li",[a("code",[t._v("void")]),t._v(" - interpreted as "),a("code",[t._v("keepStateAndData")])])]),t._v(" "),a("h4",{attrs:{id:"string-handlers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-handlers"}},[t._v("#")]),t._v(" "),a("code",[t._v("string")]),t._v(" Handlers")]),t._v(" "),a("p",[t._v("Instead of a handler function, you can provide a")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("state: string")]),t._v(" - interpreted as a next state directive.")]),t._v(" "),a("li",[a("code",[t._v("[state: string, timeout: string | number]")]),t._v(" - interpreted as a next state directive and event timeout.")])]),t._v(" "),a("h3",{attrs:{id:"result-builder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#result-builder"}},[t._v("#")]),t._v(" Result Builder")]),t._v(" "),a("p",[t._v("StateM provides a fluent interface ("),a("code",[t._v("ResultBuilder")]),t._v(") for specifying state transitions and actions in handler functions.")]),t._v(" "),a("p",[t._v("The following functions return a "),a("code",[t._v("ResultBuilder")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#"}},[t._v("keepState")]),t._v(": Instructs the state machine to keep the current state (i.e. transition to the same state). Does not emit a state entry event.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("repeatState")]),t._v(": Like "),a("code",[t._v("keepState")]),t._v(", but emits a state entry event.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("nextState(state)")]),t._v(": Instructs the state machine to transition to the given "),a("code",[t._v("state")]),t._v(" (can be the current state).")])]),t._v(" "),a("h4",{attrs:{id:"resultbuilder-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resultbuilder-methods"}},[t._v("#")]),t._v(" ResultBuilder Methods")]),t._v(" "),a("p",[a("code",[t._v("ResultBuilders")]),t._v(" provide the following chainable methods:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#"}},[t._v("data(spec)")]),t._v(": Instructs the state machine to mutate state data with the given "),a("code",[t._v("spec")]),t._v(".")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("eventTimeout(time)")]),t._v(": Starts the event timer which may result in a "),a("code",[t._v("EventTimeoutEvent")]),t._v(" event if a new event is not received.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("stateTimeout(time)")]),t._v(": Starts the state timer which may result in a "),a("code",[t._v("StateTimeoutEvent")]),t._v(" event if a state transition does not occur.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("timeout(time, name)")]),t._v(": Starts a generic timer with an optional name which may result in a "),a("code",[t._v("GenericTimeoutEvent")]),t._v(". Calling "),a("code",[t._v("timeout(name)")]),t._v(" will cancel the event if it has not yet fired.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("nextEvent(type, context, extra)")]),t._v(": Inserts an event of the given type at the front of the queue so that it is executed before pending events.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("internalEvent(context, extra)")]),t._v(": Like "),a("code",[t._v("nextEvent")]),t._v(", this method inserts an "),a("code",[t._v("InternalEvent")]),t._v(" event.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("postpone")]),t._v(": Instructs the state machine to postpone the current until the state changes at which point any postponed events are delivered before pending events.")]),t._v(" "),a("li",[a("a",{attrs:{href:"#"}},[t._v("reply(from, msg)")]),t._v(": Instructs the state machine to reply to the sender with id "),a("code",[t._v("from")]),t._v("; the result of a prior invocation of "),a("code",[t._v("call")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"mutating-state-machine-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutating-state-machine-data"}},[t._v("#")]),t._v(" Mutating State Machine Data")]),t._v(" "),a("p",[t._v("State machine data is mutated by calling the "),a("code",[t._v("data")]),t._v(" on "),a("code",[t._v("ResultBuilder")]),t._v(" with "),a("a",{attrs:{href:"#"}},[t._v("immutability-helper")]),t._v(" commands, including:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{$push: array}")]),t._v(" "),a("code",[t._v("push()")]),t._v(" all the items in "),a("code",[t._v("array")]),t._v(" on the target.\n"),a("ul",[a("li",[a("code",[t._v("{$unshift: array}")]),t._v(" "),a("code",[t._v("unshift()")]),t._v(" all the items in "),a("code",[t._v("array")]),t._v(" on the target.")]),t._v(" "),a("li",[a("code",[t._v("{$splice: array of arrays}")]),t._v(" for each item in "),a("code",[t._v("arrays")]),t._v(" call "),a("code",[t._v("splice()")]),t._v(" on the target with the parameters provided by the item. Note: The items in the array are applied sequentially, so the order matters. The indices of the target may change during the operation.* * "),a("code",[t._v("{$set: any}")]),t._v(" replace the target entirely.")]),t._v(" "),a("li",[a("code",[t._v("{$toggle: array of strings}")]),t._v(" toggles a list of boolean fields from the target object.")]),t._v(" "),a("li",[a("code",[t._v("{$unset: array of strings}")]),t._v(" remove the list of keys in "),a("code",[t._v("array")]),t._v(" from the target object.")]),t._v(" "),a("li",[a("code",[t._v("{$merge: object}")]),t._v(" merge the keys of "),a("code",[t._v("object")]),t._v(" with the target.")]),t._v(" "),a("li",[a("code",[t._v("{$apply: function}")]),t._v(" passes in the current value to the function and updates it with the new returned value.")]),t._v(" "),a("li",[a("code",[t._v("{$add: array of objects}")]),t._v(" add a value to a "),a("code",[t._v("Map")]),t._v(" or "),a("code",[t._v("Set")]),t._v(". When adding to a "),a("code",[t._v("Set")]),t._v(" you pass in an array of objects to add, when adding to a Map, you pass in "),a("code",[t._v("[key, value]")]),t._v(" arrays like so: "),a("code",[t._v("update(myMap, {$add: [['foo', 'bar'], ['baz', 'boo']]})")])]),t._v(" "),a("li",[a("code",[t._v("{$remove: array of strings}")]),t._v(" remove the list of keys in array from a "),a("code",[t._v("Map")]),t._v(" or "),a("code",[t._v("Set")]),t._v(".")])])])]),t._v(" "),a("h3",{attrs:{id:"event-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-types"}},[t._v("#")]),t._v(" Event Types")]),t._v(" "),a("h4",{attrs:{id:"callevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callevent"}},[t._v("#")]),t._v(" CallEvent")]),t._v(" "),a("p",[t._v("Sends a event of type "),a("code",[t._v("call")]),t._v(" to the state machine and returns a pending Promise.\n*   Call "),a("code",[t._v("call(context, extra)")]),t._v(" to emit.\n*   Event handlers can reply with "),a("code",[t._v("reply()")]),t._v(" action which resolves the pending Promise returned by "),a("code",[t._v("call()")]),t._v(".\n*   Internally, call generates a "),a("code",[t._v("from")]),t._v(" id to identify the caller.\n*   The event route for call is: "),a("code",[t._v("call/<from>#<context>#<state>")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"castevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#castevent"}},[t._v("#")]),t._v(" CastEvent")]),t._v(" "),a("p",[t._v("Sends a event of type "),a("code",[t._v("cast")]),t._v(" to the state machine and returns without waiting for a result.\n*   Call "),a("code",[t._v("cast(context, extra)")]),t._v(" to emit.\n*   The event route for cast is: "),a("code",[t._v("cast#<context>#<state>")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"enterevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enterevent"}},[t._v("#")]),t._v(" EnterEvent")]),t._v(" "),a("p",[t._v("Sends a "),a("code",[t._v("enter")]),t._v(" event to the state machine.\n*   Internally generated by the state machine on a state transition. If the state machine is transitioning to the same state, "),a("code",[t._v("enter")]),t._v(" is emitted if the previous event handler returns "),a("code",[t._v("repeatState")]),t._v(" (and not for either of "),a("code",[t._v("keepState")]),t._v(", or "),a("code",[t._v("nextState(same state)")]),t._v(").")]),t._v(" "),a("h4",{attrs:{id:"eventtimeoutevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventtimeoutevent"}},[t._v("#")]),t._v(" EventTimeoutEvent")]),t._v(" "),a("p",[t._v("Sends a "),a("code",[t._v("eventTimeout")]),t._v(" event to the state machine.\n*   Internally generated by the state machine when the eventTimeout timer fires.\n*   The eventTimeout timer is started by invoking "),a("code",[t._v("eventTimeout(timeout)")]),t._v(" in a event handler.\n*   The event route for "),a("code",[t._v("eventTimeout")]),t._v(" is: "),a("code",[t._v("eventTimeout#<context>#<state>")]),t._v(".\n*   Can be cancelled by calling "),a("code",[t._v("eventTimeout()")]),t._v(" without a timeout argument from an event handler.")]),t._v(" "),a("h4",{attrs:{id:"generictimeoutevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generictimeoutevent"}},[t._v("#")]),t._v(" GenericTimeoutEvent")]),t._v(" "),a("p",[t._v("Sends a "),a("code",[t._v("genericTimeout")]),t._v(" event to the state machine.\n*   Internally generated by the state machine when the (optionally named) genericTimeout timer fires.\n*   A genericTimeout timer is started by invoking "),a("code",[t._v("genericTimeout(timeout [, name])")]),t._v(" in a event handler.\n*   The event route for "),a("code",[t._v("genericTimeout")]),t._v(" is: "),a("code",[t._v("genericTimeout#<context>#<state>")]),t._v(".\n*   Can be cancelled by calling "),a("code",[t._v("genericTimeout([name])")]),t._v(" without a timeout argument from an event handler.")]),t._v(" "),a("h4",{attrs:{id:"statetimeoutevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statetimeoutevent"}},[t._v("#")]),t._v(" StateTimeoutEvent")]),t._v(" "),a("p",[t._v("Sends a "),a("code",[t._v("stateTimeout")]),t._v(" event to the state machine.\n*   Internally generated by the state machine when the stateTimeout timer fires.\n*   The stateTimeout timer is started by invoking "),a("code",[t._v("stateTimeout(timeout)")]),t._v(" in a event handler.\n*   The event route for "),a("code",[t._v("stateTimeout")]),t._v(" is: "),a("code",[t._v("stateTimeout#<context>#<state>")]),t._v(".\n*   Can be cancelled by calling "),a("code",[t._v("stateTimeout()")]),t._v(" without arguments from an event handler.")]),t._v(" "),a("h4",{attrs:{id:"internalevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#internalevent"}},[t._v("#")]),t._v(" InternalEvent")]),t._v(" "),a("p",[t._v("Sends a "),a("code",[t._v("internal")]),t._v(" event to the state machine. This is a deliberately named event to let the state machine know that the event is internal.\n*   Internally generated by invoking "),a("code",[t._v("internal(context, extra)")]),t._v(" from a event handler.\n*   The event route for "),a("code",[t._v("internal")]),t._v(" is: "),a("code",[t._v("internal#<context>#<state>")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"processing-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processing-events"}},[t._v("#")]),t._v(" Processing Events")]),t._v(" "),a("p",[t._v("The state machine looks for the first event handler whose key matches the "),a("code",[t._v("incoming event x current state")]),t._v(", or, a catch-all handler.")]),t._v(" "),a("p",[t._v("The matched handler is invoked with the incoming event, route matching arguments, the current state machine state and data.")]),t._v(" "),a("p",[t._v("The result of the handler invocation can include a state transition directive and transition actions, which are immediately executed, potentially changing the state machine’s state, mutating the internal data as well as the event queue.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])])])},[],!1,null,null,null);e.default=n.exports}}]);